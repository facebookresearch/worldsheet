dataset_config:
  synsin_realestate10k:
    data_dir: ${env.data_dir}/datasets
    image_size: 256
    num_view_per_sample: 2
    train_data_dir: /checkpoint/ronghanghu/neural_rendering_datasets/realestate10K/RealEstate10K/frames/train/
    train_video_list: /checkpoint/ronghanghu/neural_rendering_datasets/realestate10K/RealEstate10K/frames/train/video_loc.txt
    eval_val_frames: /checkpoint/ronghanghu/neural_rendering_datasets/realestate10K/RealEstate10K/frames/train/
    eval_val_cameras: ./mmf/datasets/builders/synsin_realestate10k/realestate_val.txt
    eval_test_frames: /checkpoint/ronghanghu/neural_rendering_datasets/realestate10K/RealEstate10K/all_frames/test/
    eval_test_cameras: ./mmf/datasets/builders/synsin_realestate10k/realestate_test.txt
    save_for_external_inpainting_train: false  # save PNG image files for external inpainting training
    train_num_duplicate: 1  # duplicate the training video list; only needed when save_for_external_inpainting is True
    processors:
      image_processor:
        type: torchvision_transforms
        params:
          transforms:
            # ToTensor is not needed has we have already handled uint8 to float and HWC to CHW in the dataset
            - type: Normalize
              params:
                mean: [0.485, 0.456, 0.406]
                std: [0.229, 0.224, 0.225]
